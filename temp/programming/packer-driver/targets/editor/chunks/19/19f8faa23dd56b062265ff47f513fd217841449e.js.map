{"version":3,"sources":["file:///D:/Cocosworkspace/Cocos_2048/assets/scripts/Game.ts"],"names":["_decorator","Component","instantiate","Label","Node","Prefab","UITransform","Vec2","view","Block","ccclass","property","Game","type","score","gap","blockSize","blockHorizontalNum","blockVerticalNum","blockPositions","drawBgBlocks","getVisibleSize","width","y","i","x","push","j","block","blockPrefab","blockUiTransform","getComponent","height","setPosition","setNumber","background","addChild","console","log","start","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAgBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;;AAEpFC,MAAAA,K,iBAAAA,K;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;sBAGjBY,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEV;AAAP,OAAD,C,UAGRQ,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER;AAAP,OAAD,C,UAGRM,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAET;AAAP,OAAD,C,2BARb,MACaQ,IADb,SAC0BX,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA,eAGxBa,KAHwB,GAGR,CAHQ;;AAAA;;AAAA,eAMxBC,GANwB,GAMV,EANU;;AAAA;;AAAA,eASxBC,SATwB,GASJ,CATI;AAAA,eAUxBC,kBAVwB,GAUK,CAVL;AAAA,eAWxBC,gBAXwB,GAWG,CAXH;AAAA,eAYxBC,cAZwB,GAYP,EAZO;AAAA;;AAchCC,QAAAA,YAAY,GAAG;AACX,eAAKJ,SAAL,GAAiB,CAACR,IAAI,CAACa,cAAL,GAAsBC,KAAtB,GAA8B,KAAKP,GAAL,GAAW,CAA1C,IAA+C,CAAhE;AAEA,eAAKI,cAAL,GAAsB,EAAtB;AACA,cAAII,CAAC,GAAG,KAAKR,GAAL,GAAW,KAAKC,SAAL,GAAiB,CAApC;;AACA,eAAK,IAAIQ,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,KAAKN,gBAApB,EAAqC,EAAEM,CAAvC,EAA0C;AACtC,gBAAIC,CAAC,GAAG,KAAKV,GAAL,GAAW,KAAKC,SAAL,GAAiB,CAApC;AACA,iBAAKG,cAAL,CAAoBO,IAApB,CAAyB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAzB;;AACA,iBAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKV,kBAAnB,EAAsC,EAAEU,CAAxC,EAA2C;AACvC,kBAAIC,KAAK,GAAG1B,WAAW,CAAC,KAAK2B,WAAN,CAAvB;AACA,kBAAIC,gBAAgB,GAAGF,KAAK,CAACG,YAAN,CAAmBzB,WAAnB,CAAvB;AACAwB,cAAAA,gBAAgB,CAACR,KAAjB,GAAyBQ,gBAAgB,CAACE,MAAjB,GAA0B,KAAKhB,SAAxD;AACAY,cAAAA,KAAK,CAACK,WAAN,CAAkBR,CAAlB,EAAqBF,CAArB;AACA,mBAAKJ,cAAL,CAAoBK,CAApB,EAAuBG,CAAvB,IAA4B,IAAIpB,IAAJ,CAASkB,CAAT,EAAYF,CAAZ,CAA5B;AACAK,cAAAA,KAAK,CAACG,YAAN;AAAA;AAAA,kCAA0BG,SAA1B,CAAoC,CAApC;AACA,mBAAKC,UAAL,CAAgBC,QAAhB,CAAyBR,KAAzB;AACAH,cAAAA,CAAC,IAAI,KAAKV,GAAL,GAAW,KAAKC,SAArB;AACH;;AACDO,YAAAA,CAAC,IAAI,KAAKR,GAAL,GAAW,KAAKC,SAArB;AACH;;AACDqB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,cAAjB;AACH;;AAEDoB,QAAAA,KAAK,GAAG;AACJ,eAAKnB,YAAL;AACH;;AAEDoB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3C+B,O","sourcesContent":["import { _decorator, Component, instantiate, Label, Node, Prefab, Sprite, UITransform, Vec2, view } from 'cc';\nimport { colors }  from './Colors';\nimport { Block } from './Block';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Game')\nexport class Game extends Component {\n    @property({type: Label})\n    private scoreLabel: Label;\n    private score: number = 0;\n    @property({type: Prefab})\n    private blockPrefab: Prefab;\n    private gap: number = 20;\n    @property({type: Node})\n    private background: Node;\n    private blockSize: number = 0;\n    private blockHorizontalNum: number = 4;\n    private blockVerticalNum: number = 4;\n    private blockPositions = [];\n\n    drawBgBlocks() {\n        this.blockSize = (view.getVisibleSize().width - this.gap * 5) / 4;\n\n        this.blockPositions = [];\n        var y = this.gap + this.blockSize / 2;\n        for (var i=0;i<this.blockVerticalNum;++i) {\n            var x = this.gap + this.blockSize / 2;\n            this.blockPositions.push([0, 0, 0, 0]);\n            for(var j=0;j<this.blockHorizontalNum;++j) {\n                var block = instantiate(this.blockPrefab);\n                var blockUiTransform = block.getComponent(UITransform);\n                blockUiTransform.width = blockUiTransform.height = this.blockSize;\n                block.setPosition(x, y);\n                this.blockPositions[i][j] = new Vec2(x, y);\n                block.getComponent(Block).setNumber(0);\n                this.background.addChild(block);\n                x += this.gap + this.blockSize;\n            }\n            y += this.gap + this.blockSize;\n        }\n        console.log(this.blockPositions);\n    }\n\n    start() {\n        this.drawBgBlocks();\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}